---
- import_tasks: setup_db.yml

- name: Verifica o repositório
  stat:
    path: /var/www/{{ app_name }}/
  register: app_dir

- name: Clona o repositório
  git:
    repo: "{{ repo_git }}"
    dest: /var/www/{{ app_name }}
    clone: yes
    update: yes
  when: not app_dir.stat.exists

- name: Remove arquivo ruby-version
  shell: rm -rf /var/www/{{ app_name }}/.ruby-version

- name: Verifica Gemfile.lock
  stat: path=/var/www/{{ app_name }}/Gemfile.lock
  register: Gemfilelock_stat

- name: Remove arquivo Gemfile.lock
  copy: remote_src=True src=/var/www/{{ app_name }}/Gemfile.lock dest=/var/www/{{ app_name }}/Gemfile.lock.old
  when: Gemfilelock_stat.stat.exists

- name: Muda versão do Ruby no Gemfile
  ansible.builtin.replace:
    dest: /var/www/{{ app_name }}/Gemfile
    regexp: "^ruby '[0-9].[0-9].[0-9]'"
    replace: "ruby '{{ ruby_version }}'"
  become: true

- name: Define o gemset
  command: bash -lc "/usr/local/rvm/bin/rvm alias create {{ app_name }} ruby-{{ ruby_version }}@{{ app_name }} --create"
  args:
    chdir: /var/www/{{ app_name }}/
    creates: /usr/local/rvm/wrappers/ruby-{{ ruby_version }}@{{ app_name }}
    
- name: Instala o Bundler
  command: bash -lc "/usr/local/rvm/bin/rvm {{ app_name }} do gem install bundler"
  args:
    chdir: /var/www/{{app_name}}/
    creates: /usr/local/rvm/wrappers/ruby-{{ ruby_version }}@{{ app_name }}/bundler

- name: Instala as Gems do projeto
  command: bash -lc "/usr/local/rvm/bin/rvm {{ app_name }} do bundle install"
  args:
    chdir: /var/www/{{ app_name }}/

- name: Verifica se o application.yml existe
  stat:
    path: /var/www/{{ app_name }}/config/application.yml
  register: arquivo_application

- name: Instala o Fígaro
  command: bash -lc "/usr/local/rvm/bin/rvm {{ app_name }} do bundle exec figaro install"
  args:
    chdir: /var/www/{{ app_name }}/
  when: not arquivo_application.stat.exists

- name: Copia as variáveis de ambiente
  template:
    src: application.yml.j2
    dest: /var/www/{{ app_name }}/config/application.yml

- name: Remove require_master_key
  shell: rm -rf /var/www/{{ app_name }}/config/credentials.yml.enc && rm -rf /var/www/{{ app_name }}/config/master.key

- name: Cria credentials.yml.enc 
  command: bash -lc "EDITOR=mate /usr/local/rvm/bin/rvm {{ app_name }} do rails credentials:edit"
  args:
    chdir: /var/www/{{ app_name }}/

- name: Verifica o assets
  stat:
    path: /var/www/{{ app_name }}/public/assets
  register: assets

- name: Precompila a aplicação
  command: bash -lc "/usr/local/rvm/bin/rvm {{ app_name }} do rake assets:precompile"
  args:
    chdir: /var/www/{{ app_name }}/
  when: not assets.stat.exists
